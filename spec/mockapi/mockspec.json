{
  "oappy": "0.0.1",
  "info": {
    "name": "mockapi",
    "go-package-name": "mockapi",
    "go-package-import-path": "github.com/qlik-oss/enigma-go/spec/mockapi",
    "version": "no particular version",
    "description": "mockapi is a package used to verify the spec generator itself",
    "license": "MIT"
  },
  "x-qlik-visibility": "public",
  "x-qlik-stability": "locked",
  "definitions": {
    "DepObj": {
      "deprecated": true,
      "x-qlik-deprecation-description": "This will be removed in a future version",
      "type": "struct",
      "entries": {
        "DepMember1": {
          "deprecated": true,
          "x-qlik-deprecation-description": "This will be removed in a future version",
          "type": "method"
        },
        "DepMember2": {
          "description": "Comment preceding deprecation",
          "deprecated": true,
          "x-qlik-deprecation-description": "This will be removed in a future version",
          "type": "method"
        }
      }
    },
    "Dial": {
      "type": "function",
      "params": [
        {
          "type": "string"
        }
      ],
      "returns": [
        {
          "type": "#/definitions/Obj"
        }
      ]
    },
    "ExperimentalObject1": {
      "x-qlik-stability": "Experimental",
      "type": "struct",
      "entries": {
        "ExpMember1": {
          "description": "Experimental comment",
          "x-qlik-stability": "Experimental",
          "type": "method"
        }
      }
    },
    "ExperimentalObject2": {
      "description": "Experimental comment",
      "x-qlik-stability": "Experimental",
      "type": "struct"
    },
    "Float32": {
      "description": "Alias for float32 so we can add some methods",
      "type": "float32",
      "entries": {
        "AdditionalMethodOnFloat": {
          "description": "Method on Float32",
          "type": "method"
        }
      }
    },
    "Interface1": {
      "description": "Comment Interface1",
      "type": "interface",
      "entries": {
        "FuncInPrivateEmbeddedInterface": {
          "type": "method"
        },
        "FuncInPublicEmbeddedInterface": {
          "type": "method"
        },
        "InterfaceFunc1": {
          "type": "method",
          "params": [
            {
              "type": "string"
            }
          ],
          "returns": [
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "NamedSlice": {
      "description": "Comment for NamedSlice",
      "type": "slice",
      "items": {
        "type": "#/definitions/SubObj"
      }
    },
    "Obj": {
      "description": "Comment for Obj",
      "type": "struct",
      "entries": {
        "Chan1": {
          "type": "interface"
        },
        "Chan2": {
          "type": "chan",
          "items": {
            "type": "struct",
            "ref-type": "value"
          }
        },
        "Chan3": {
          "type": "chan",
          "items": {
            "type": "struct",
            "entries": {
              "A": {
                "type": "string"
              },
              "B": {
                "type": "string"
              }
            },
            "ref-type": "value"
          }
        },
        "Chan4": {
          "type": "chan",
          "items": {
            "type": "struct",
            "entries": {
              "A": {
                "type": "string"
              },
              "B": {
                "type": "string"
              }
            }
          }
        },
        "Chan5": {
          "type": "chan",
          "items": {
            "type": "#/definitions/SubObj"
          }
        },
        "Chan6": {
          "type": "chan",
          "items": {
            "type": "#/definitions/SubObj",
            "ref-type": "value"
          }
        },
        "DepObj": {
          "type": "#/definitions/DepObj"
        },
        "FieldFunc1": {
          "description": "Comment for FieldFunc",
          "type": "function",
          "params": [
            {
              "type": "#/definitions/Signature"
            },
            {
              "type": "string"
            },
            {
              "type": "int"
            },
            {
              "type": "int",
              "ref-type": "pointer"
            },
            {
              "type": "#/definitions/SubObj"
            },
            {
              "type": "#/definitions/SubObj",
              "ref-type": "value"
            },
            {
              "type": "#/definitions/Interface1"
            },
            {
              "type": "slice",
              "items": {
                "type": "#/definitions/SubObj"
              }
            },
            {
              "type": "slice",
              "items": {
                "type": "#/definitions/SubObj",
                "ref-type": "value"
              }
            },
            {
              "type": "slice",
              "items": {
                "type": "int"
              }
            },
            {
              "type": "#/definitions/NamedSlice"
            },
            {
              "type": "interface"
            },
            {
              "type": "chan",
              "items": {
                "type": "struct",
                "ref-type": "value"
              }
            },
            {
              "type": "chan",
              "items": {
                "type": "struct",
                "entries": {
                  "A": {
                    "type": "string"
                  },
                  "B": {
                    "type": "string"
                  }
                },
                "ref-type": "value"
              }
            },
            {
              "type": "chan",
              "items": {
                "type": "struct",
                "entries": {
                  "A": {
                    "type": "string"
                  },
                  "B": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "type": "chan",
              "items": {
                "type": "#/definitions/SubObj"
              }
            },
            {
              "type": "chan",
              "items": {
                "type": "#/definitions/SubObj",
                "ref-type": "value"
              }
            },
            {
              "type": "#/definitions/DepObj"
            }
          ],
          "returns": [
            {
              "type": "string"
            },
            {
              "type": "#/definitions/Obj"
            },
            {
              "type": "https://golang.org/pkg/net/http/httputil/BufferPool"
            },
            {
              "type": "error"
            }
          ]
        },
        "Func2": {
          "type": "#/definitions/Signature"
        },
        "FuncInPrivateEmbedded": {
          "description": "Comment for FuncInPrivateEmbedded",
          "type": "method"
        },
        "Member": {
          "description": "Comment for Member",
          "type": "method",
          "params": [
            {
              "type": "string"
            },
            {
              "type": "int"
            },
            {
              "type": "int",
              "ref-type": "pointer"
            },
            {
              "type": "#/definitions/SubObj"
            },
            {
              "type": "#/definitions/SubObj",
              "ref-type": "value"
            },
            {
              "type": "#/definitions/Interface1"
            },
            {
              "type": "slice",
              "items": {
                "type": "#/definitions/SubObj"
              }
            },
            {
              "type": "slice",
              "items": {
                "type": "#/definitions/SubObj",
                "ref-type": "value"
              }
            }
          ]
        },
        "MemberNonPointerReceiver": {
          "type": "method"
        },
        "PublicEmbedded": {
          "type": "#/definitions/PublicEmbedded",
          "embedded": true
        },
        "Slice1": {
          "type": "slice",
          "items": {
            "type": "#/definitions/SubObj"
          }
        },
        "Slice2": {
          "type": "slice",
          "items": {
            "type": "#/definitions/SubObj",
            "ref-type": "value"
          }
        },
        "Slice3": {
          "type": "slice",
          "items": {
            "type": "int"
          }
        },
        "Slice4": {
          "type": "#/definitions/NamedSlice"
        },
        "Var1": {
          "type": "string"
        },
        "Var2": {
          "type": "int"
        },
        "Var3": {
          "type": "int",
          "ref-type": "pointer"
        },
        "Var4": {
          "type": "#/definitions/SubObj"
        },
        "Var5": {
          "type": "#/definitions/SubObj",
          "ref-type": "value"
        },
        "Var6": {
          "description": "Comment for variable",
          "type": "#/definitions/Interface1"
        }
      }
    },
    "PublicEmbedded": {
      "description": "Comment for PublicEmbedded",
      "type": "struct",
      "entries": {
        "FuncInPublicEmbedded": {
          "description": "Comment for FuncInPublicEmbedded",
          "type": "method"
        }
      }
    },
    "PublicEmbeddedInteface": {
      "description": "Comment PublicEmbeddedInteface",
      "type": "interface",
      "entries": {
        "FuncInPublicEmbeddedInterface": {
          "type": "method"
        }
      }
    },
    "Signature": {
      "description": "Comment for signature",
      "type": "function-signature",
      "params": [
        {
          "type": "string"
        },
        {
          "type": "int"
        },
        {
          "type": "int",
          "ref-type": "pointer"
        },
        {
          "type": "#/definitions/SubObj"
        },
        {
          "type": "#/definitions/SubObj",
          "ref-type": "value"
        },
        {
          "type": "#/definitions/Interface1"
        }
      ],
      "returns": [
        {
          "type": "string"
        }
      ]
    },
    "SubObj": {
      "type": "struct"
    }
  }
}