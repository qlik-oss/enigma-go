{
   "oappy": "0.0.1",
   "info": {
      "name": "mockapi",
      "go-package-name": "mockapi",
      "go-package-import-path": "github.com/qlik-oss/enigma-go/spec/mockapi",
      "version": "no particular version",
      "description": "mockapi is a package used to verify the spec generator itself",
      "license": "MIT",
      "x-qlik-visibility": "public",
      "x-qlik-stability": "locked"
   },
   "definitions": {
      "DepObj": {
         "deprecated": true,
         "x-qlik-deprecation-description": "This will be removed in a future version",
         "type": "struct",
         "entries": {
            "DepMember1": {
               "deprecated": true,
               "x-qlik-deprecation-description": "This will be removed in a future version",
               "type": "method"
            },
            "DepMember2": {
               "description": "Comment preceding deprecation",
               "deprecated": true,
               "x-qlik-deprecation-description": "This will be removed in a future version",
               "type": "method"
            }
         }
      },
      "Dial": {
         "type": "function",
         "params": [
            {
               "type": "string"
            }
         ],
         "returns": [
            {
               "type": "mockapi.Obj"
            }
         ]
      },
      "ExperimentalObject1": {
         "x-qlik-stability": "Experimental",
         "type": "struct",
         "entries": {
            "ExpMember1": {
               "description": "Experimental comment",
               "x-qlik-stability": "Experimental",
               "type": "method"
            }
         }
      },
      "ExperimentalObject2": {
         "description": "Experimental comment",
         "x-qlik-stability": "Experimental",
         "type": "struct"
      },
      "Interface1": {
         "description": "Comment Interface1",
         "type": "interface",
         "entries": {
            "FuncInPrivateEmbeddedInterface": {
               "type": "method"
            },
            "FuncInPublicEmbeddedInterface": {
               "type": "method"
            },
            "InterfaceFunc1": {
               "type": "method",
               "params": [
                  {
                     "type": "string"
                  }
               ],
               "returns": [
                  {
                     "type": "string"
                  }
               ]
            }
         }
      },
      "NamedSlice": {
         "type": "slice",
         "items": {
            "type": "mockapi.SubObj"
         }
      },
      "Obj": {
         "type": "struct",
         "entries": {
            "Chan1": {
               "type": "interface"
            },
            "Chan2": {
               "type": "chan",
               "items": {
                  "type": "struct",
                  "ref-type": "value"
               }
            },
            "Chan3": {
               "type": "chan",
               "items": {
                  "type": "struct",
                  "entries": {
                     "A": {
                        "type": "string"
                     },
                     "B": {
                        "type": "string"
                     }
                  },
                  "ref-type": "value"
               }
            },
            "Chan4": {
               "type": "chan",
               "items": {
                  "type": "struct",
                  "entries": {
                     "A": {
                        "type": "string"
                     },
                     "B": {
                        "type": "string"
                     }
                  }
               }
            },
            "Chan5": {
               "type": "chan",
               "items": {
                  "type": "mockapi.SubObj"
               }
            },
            "Chan6": {
               "type": "chan",
               "items": {
                  "type": "mockapi.SubObj",
                  "ref-type": "value"
               }
            },
            "DepObj": {
               "type": "mockapi.DepObj"
            },
            "FieldFunc1": {
               "type": "function",
               "params": [
                  {
                     "type": "mockapi.Signature"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "int"
                  },
                  {
                     "type": "int",
                     "ref-type": "pointer"
                  },
                  {
                     "type": "mockapi.SubObj"
                  },
                  {
                     "type": "mockapi.SubObj",
                     "ref-type": "value"
                  },
                  {
                     "type": "mockapi.Interface1"
                  },
                  {
                     "type": "slice",
                     "items": {
                        "type": "mockapi.SubObj"
                     }
                  },
                  {
                     "type": "slice",
                     "items": {
                        "type": "mockapi.SubObj",
                        "ref-type": "value"
                     }
                  },
                  {
                     "type": "slice",
                     "items": {
                        "type": "int"
                     }
                  },
                  {
                     "type": "mockapi.NamedSlice"
                  },
                  {
                     "type": "interface"
                  },
                  {
                     "type": "chan",
                     "items": {
                        "type": "struct",
                        "ref-type": "value"
                     }
                  },
                  {
                     "type": "chan",
                     "items": {
                        "type": "struct",
                        "entries": {
                           "A": {
                              "type": "string"
                           },
                           "B": {
                              "type": "string"
                           }
                        },
                        "ref-type": "value"
                     }
                  },
                  {
                     "type": "chan",
                     "items": {
                        "type": "struct",
                        "entries": {
                           "A": {
                              "type": "string"
                           },
                           "B": {
                              "type": "string"
                           }
                        }
                     }
                  },
                  {
                     "type": "chan",
                     "items": {
                        "type": "mockapi.SubObj"
                     }
                  },
                  {
                     "type": "chan",
                     "items": {
                        "type": "mockapi.SubObj",
                        "ref-type": "value"
                     }
                  },
                  {
                     "type": "mockapi.DepObj"
                  }
               ],
               "returns": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "mockapi.Obj"
                  },
                  {
                     "type": "net.Conn"
                  },
                  {
                     "type": "error"
                  }
               ]
            },
            "Func2": {
               "type": "mockapi.Signature"
            },
            "FuncInPrivateEmbedded": {
               "type": "method"
            },
            "MemberNonPointerReceiver": {
               "type": "method"
            },
            "PublicEmbedded": {
               "type": "mockapi.PublicEmbedded",
               "embedded": true
            },
            "Slice1": {
               "type": "slice",
               "items": {
                  "type": "mockapi.SubObj"
               }
            },
            "Slice2": {
               "type": "slice",
               "items": {
                  "type": "mockapi.SubObj",
                  "ref-type": "value"
               }
            },
            "Slice3": {
               "type": "slice",
               "items": {
                  "type": "int"
               }
            },
            "Slice4": {
               "type": "mockapi.NamedSlice"
            },
            "Var1": {
               "type": "string"
            },
            "Var2": {
               "type": "int"
            },
            "Var3": {
               "type": "int",
               "ref-type": "pointer"
            },
            "Var4": {
               "type": "mockapi.SubObj"
            },
            "Var5": {
               "type": "mockapi.SubObj",
               "ref-type": "value"
            },
            "Var6": {
               "type": "mockapi.Interface1"
            }
         }
      },
      "PublicEmbedded": {
         "type": "struct",
         "entries": {
            "FuncInPublicEmbedded": {
               "type": "method"
            }
         }
      },
      "PublicEmbeddedInteface": {
         "description": "Comment PublicEmbeddedInteface",
         "type": "interface",
         "entries": {
            "FuncInPublicEmbeddedInterface": {
               "type": "method"
            }
         }
      },
      "Signature": {
         "type": "function-signature",
         "params": [
            {
               "type": "string"
            },
            {
               "type": "int"
            },
            {
               "type": "int",
               "ref-type": "pointer"
            },
            {
               "type": "mockapi.SubObj"
            },
            {
               "type": "mockapi.SubObj",
               "ref-type": "value"
            },
            {
               "type": "mockapi.Interface1"
            }
         ],
         "returns": [
            {
               "type": "string"
            }
         ]
      },
      "SubObj": {
         "type": "struct"
      }
   }
}