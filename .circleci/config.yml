version: 2
jobs:
  build:
    working_directory: /go/src/github.com/qlik-oss/enigma-go
    docker:
      - image: circleci/golang:1.11
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: Install lint
          command: go get -u golang.org/x/lint/golint
      - run:
          name: Linting
          command: golint -set_exit_status
      - restore_cache:
          key: dependency-cache-{{ checksum "go.sum" }}
      - run:
          name: Build
          command: go build
      - save_cache:
          key: dependency-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Test
          command: go test -v -race ./...
      - setup_remote_docker
      - run:
          name: Execute integration tests
          working_directory: /go
          command: |
            ENGINE_VERSION=$(curl -s "https://registry.hub.docker.com/v2/repositories/qlikcore/engine/tags/" | docker run -i stedolan/jq -r '."results"[0]["name"]' 2>/dev/null)
            echo "Will start Qlik Associative Engine version '$ENGINE_VERSION'"
            ENGINE_CONTAINER_ID=$(docker run -d qlikcore/engine:$ENGINE_VERSION -S AcceptEULA=yes)
            ENGINE_IP=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' $ENGINE_CONTAINER_ID)
            docker cp /go/src/github.com/qlik-oss/enigma-go/examples/reload/monitor-progress/testdata/ $ENGINE_CONTAINER_ID:/testdata
            TEST_CONTAINER_ID=$(docker run -e "GO111MODULE=on" -e "CGO_ENABLED=0" -d golang:1.11-alpine tail -f /dev/null)
            docker cp . $TEST_CONTAINER_ID:/go
            docker exec $TEST_CONTAINER_ID /bin/sh -c 'apk update && apk add --no-cache socat bash'
            docker exec -d $TEST_CONTAINER_ID /bin/bash -c "socat TCP-LISTEN:9076,fork TCP:$ENGINE_IP:9076"
            docker exec $TEST_CONTAINER_ID /bin/bash -c '/go/src/github.com/qlik-oss/enigma-go/examples/run_examples.sh'
